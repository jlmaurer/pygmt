
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "tutorials/3d-perspective-image.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_tutorials_3d-perspective-image.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_tutorials_3d-perspective-image.py:


Creating a 3D perspective image
===============================

Create 3-D perspective image or surface mesh from a grid
using :meth:`pygmt.Figure.grdview`.

.. GENERATED FROM PYTHON SOURCE LINES 8-14

.. code-block:: default


    import pygmt

    # Load sample earth relief data
    grid = pygmt.datasets.load_earth_relief(resolution="05m", region=[-108, -103, 35, 40])





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    grdblend [NOTICE]: Remote data courtesy of GMT data server OCEANIA [https://oceania.generic-mapping-tools.org]
    grdblend [NOTICE]: Earth Relief at 5x5 arc minutes from Gaussian Cartesian filtering (9 km fullwidth) of SRTM15+V2.1 [Tozer et al., 2019].
    grdblend [NOTICE]:   -> Download 180x180 degree grid tile (earth_relief_05m_p): S90W180




.. GENERATED FROM PYTHON SOURCE LINES 15-21

The :meth:`pygmt.Figure.grdview` method takes the ``grid`` input.
The ``perspective`` argument changes the azimuth and elevation of the viewpoint; the
default is [180, 90], which is looking directly down on the figure and north is "up".
The ``zsize`` argument sets how tall the three-dimensional portion appears.

The default grid surface type is *mesh plot*.

.. GENERATED FROM PYTHON SOURCE LINES 21-36

.. code-block:: default


    fig = pygmt.Figure()
    fig.grdview(
        grid=grid,
        # Sets the view azimuth as 130 degrees, and the view elevation as 30 degrees
        perspective=[130, 30],
        # Sets the x- and y-axis labels, and annotates the west, south, and east axes
        frame=["xa", "ya", "WSnE"],
        # Sets a Mercator projection on a 15-centimeter figure
        projection="M15c",
        # Sets the height of the three-dimensional relief at 1.5 centimeters
        zsize="1.5c",
    )
    fig.show()




.. image:: /tutorials/images/sphx_glr_3d-perspective-image_001.png
    :alt: 3d perspective image
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>



.. GENERATED FROM PYTHON SOURCE LINES 37-38

The grid surface type can be set with the ``surftype`` parameter.

.. GENERATED FROM PYTHON SOURCE LINES 38-51

.. code-block:: default


    fig = pygmt.Figure()
    fig.grdview(
        grid=grid,
        perspective=[130, 30],
        frame=["xa", "ya", "WSnE"],
        projection="M15c",
        zsize="1.5c",
        # Set the surftype to "surface"
        surftype="s",
    )
    fig.show()




.. image:: /tutorials/images/sphx_glr_3d-perspective-image_002.png
    :alt: 3d perspective image
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>



.. GENERATED FROM PYTHON SOURCE LINES 52-53

The default CPT is *turbo* and can be customized with the ``cmap`` parameter.

.. GENERATED FROM PYTHON SOURCE LINES 53-67

.. code-block:: default


    fig = pygmt.Figure()
    fig.grdview(
        grid=grid,
        perspective=[130, 30],
        frame=["xa", "yaf", "WSnE"],
        projection="M15c",
        zsize="1.5c",
        surftype="s",
        # Set the CPT to "geo"
        cmap="geo",
    )
    fig.show()




.. image:: /tutorials/images/sphx_glr_3d-perspective-image_003.png
    :alt: 3d perspective image
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>



.. GENERATED FROM PYTHON SOURCE LINES 68-70

The ``plane`` argument sets the elevation and color of a plane that provides a fill
below the surface relief.

.. GENERATED FROM PYTHON SOURCE LINES 70-85

.. code-block:: default


    fig = pygmt.Figure()
    fig.grdview(
        grid=grid,
        perspective=[130, 30],
        frame=["xa", "yaf", "WSnE"],
        projection="M15c",
        zsize="1.5c",
        surftype="s",
        cmap="geo",
        # Set the plane elevation to 1,000 meters and make the fill "gray"
        plane="1000+ggray",
    )
    fig.show()




.. image:: /tutorials/images/sphx_glr_3d-perspective-image_004.png
    :alt: 3d perspective image
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>



.. GENERATED FROM PYTHON SOURCE LINES 86-88

The ``perspective`` azimuth can be changed to set the direction that is "up"
in the figure.

.. GENERATED FROM PYTHON SOURCE LINES 88-103

.. code-block:: default


    fig = pygmt.Figure()
    fig.grdview(
        grid=grid,
        # Set the azimuth to -130 (230) degrees and the elevation to 30 degrees
        perspective=[-130, 30],
        frame=["xa", "yaf", "WSnE"],
        projection="M15c",
        zsize="1.5c",
        surftype="s",
        cmap="geo",
        plane="1000+ggrey",
    )
    fig.show()




.. image:: /tutorials/images/sphx_glr_3d-perspective-image_005.png
    :alt: 3d perspective image
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>



.. GENERATED FROM PYTHON SOURCE LINES 104-105

The ``contourpen`` parameter sets the pen used to draw contour lines on the surface.

.. GENERATED FROM PYTHON SOURCE LINES 105-121

.. code-block:: default


    fig = pygmt.Figure()
    fig.grdview(
        grid=grid,
        perspective=[-130, 30],
        frame=["xaf", "yaf", "WSnE"],
        projection="M15c",
        zsize="1.5c",
        surftype="s",
        cmap="geo",
        plane="1000+ggrey",
        # Set the contour pen thickness to "0.5p"
        contourpen="0.5p",
    )
    fig.show()




.. image:: /tutorials/images/sphx_glr_3d-perspective-image_006.png
    :alt: 3d perspective image
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>



.. GENERATED FROM PYTHON SOURCE LINES 122-125

:meth:`pygmt.Figure.colorbar` can be used to add a color bar to the figure. The
``cmap`` argument does not need to be passed again. To keep the color bar's alignment
similar to the figure, use **True** as the ``perspective`` argument.

.. GENERATED FROM PYTHON SOURCE LINES 125-140

.. code-block:: default


    fig = pygmt.Figure()
    fig.grdview(
        grid=grid,
        perspective=[-130, 30],
        frame=["xaf", "yaf", "WSnE"],
        projection="M15c",
        zsize="1.5c",
        surftype="s",
        cmap="geo",
        plane="1000+ggrey",
        contourpen="0.1p",
    )
    fig.colorbar(perspective=True, frame=["a500", "x+lElevation", "y+lm"])
    fig.show()



.. image:: /tutorials/images/sphx_glr_3d-perspective-image_007.png
    :alt: 3d perspective image
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  17.803 seconds)


.. _sphx_glr_download_tutorials_3d-perspective-image.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: 3d-perspective-image.py <3d-perspective-image.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: 3d-perspective-image.ipynb <3d-perspective-image.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
